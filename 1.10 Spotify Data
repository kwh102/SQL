/*For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert the data into SQLite. Then I queried the data.*/

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

SELECT * FROM BIT_DB.Spotifydata;

/*What is the average danceability by artist and track?*/
SELECT artist_name, track_name, avg(popularity), avg(danceability) FROM BIT_DB.Spotifydata
    GROUP BY artist_name, track_name;
    
/*Who are the top 10 artists based on popularity?*/
SELECT artist_name, popularity FROM BIT_DB.Spotifydata
    ORDER BY popularity desc
    LIMIT 10;
    
/*Which song is the longest? The slowest?*/
SELECT artist_name, track_name, duration_ms FROM BIT_DB.Spotifydata
    ORDER BY duration_ms desc
    LIMIT 1;

SELECT artist_name, track_name, duration_ms FROM BIT_DB.Spotifydata
    ORDER BY duration_ms asc
    LIMIT 1;
    
/* My task is to calculate the average popularity for the artists in the table. Then, for every artist with an average popularity of 90 or above, you need to show their name, their average popularity, and label them as a “Top Star”.*/
    
WITH popularity_average_CTE AS(
    SELECt s.artist_name, 
    AVG(s.popularity) AS average_popularity
    FROM Spotifydata s
        GROUP BY s.artist_name)
        
SELECT artist_name, average_popularity, 'Top Star' AS tag
    FROM popularity_average_CTE
    WHERE average_popularity >= 90
    ORDER BY average_popularity desc;
        
